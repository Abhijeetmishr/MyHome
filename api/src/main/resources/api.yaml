openapi: 3.0.2
servers:
  - url: /v3
info:
  description: This is a OpenApi specification for MyHome backend service.
  version: 2.0.0
  title: Swagger MyHome - OpenAPI 3.0
tags:
  - name: Users
  - name: Payments
paths:
  /users:
    post:
      tags:
        - Users
      description: "Create a new user"
      operationId: signUp
      requestBody:
        description: CreateUserRequest aggregate fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: "if user created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '409':
          description: "if user already exists"
    get:
      tags:
        - Users
      description: "Lists all users"
      operationId: listAllUsers
      parameters:
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: "Returns list of users"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserDetailsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetUserDetailsResponse'
  /users/{userId}:
    get:
      tags:
        - Users
      description: "Get details of a user given userId"
      operationId: getUserDetails
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID of the user to get
      responses:
        '200':
          description: "If userId is valid. Response body has the details"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserDetailsResponseUser'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetUserDetailsResponseUser'
        '404':
          description: "If userId is invalid"
  /payments:
    post:
      tags:
        - Payments
      description: "Schedule a new payment"
      operationId: schedulePayment
      requestBody:
        description: CreateUserRequest aggregate fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchedulePaymentRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SchedulePaymentRequest'
      responses:
        '201':
          description: "If schedule payment is created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulePaymentResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SchedulePaymentResponse'
components:
  schemas:
    CreateUserRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
          maxLength: 80
    CreateUserResponse:
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        email:
          type: string
    GetUserDetailsResponse:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GetUserDetailsResponseUser'
    GetUserDetailsResponseUser:
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        email:
          type: string
        communityIds:
          type: array
          uniqueItems: true
          items:
            type: string
    Pageable:
      description: Pageable query parameters
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
    SchedulePaymentRequest:
      type: object
      required:
        - description
      properties:
        type:
          type: string
        description:
          type: string
          minLength: 5
          maxLength: 300
        recurring:
          type: boolean
        charge:
          type: number
        dueDate:
          type: string
        adminId:
          type: string
        memberId:
          type: string
    SchedulePaymentResponse:
      type: object
      properties:
        paymentId:
          type: string
        charge:
          type: number
        type:
          type: string
        description:
          type: string
        recurring:
          type: boolean
        dueDate:
          type: string
        adminId:
          type: string
        memberId:
          type: string